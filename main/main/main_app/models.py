from django.db import models
import os
import shutil
import zipfile
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.conf import settings


class Facultet(models.Model):
    name = models.CharField(max_length=100)
    image = models.ImageField(upload_to='upload/', blank=True, null=True)

    def __str__(self):
        return self.name


class Book(models.Model):
    name = models.CharField(max_length=300)
    author = models.CharField(max_length=300)
    year = models.IntegerField()
    facultet = models.ForeignKey(Facultet, on_delete=models.CASCADE)
    annotation = models.TextField()
    title_image = models.ImageField(upload_to='upload/', blank=True, null=True)
    last_book = models.BooleanField(default=False)
    number = models.IntegerField()
    mobile_zip = models.FileField(
        upload_to='books/zips/',
        verbose_name="ZIP-—Ñ–∞–π–ª –∫–Ω–∏–≥–∏",
        blank=True,
        null=True
    )
    mobile_folder = models.CharField(
        max_length=500,
        blank=True,
        null=True,
        verbose_name="–ü–∞–ø–∫–∞ —Å HTML –∫–Ω–∏–≥–æ–π"
    )
    specialty_code = models.CharField(max_length=300, null=True, blank=True)

    def __str__(self):
        return self.name

    # üìñ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ index.html (–∏—â–µ—Ç –≤ –∫–æ—Ä–Ω–µ –∏–ª–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö)
    def get_index_html_path(self):
        if self.mobile_folder:
            abs_path = os.path.join(settings.MEDIA_ROOT, self.mobile_folder)

            # 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ—Å—Ç–æ ‚Äî index.html –≤ –∫–æ—Ä–Ω–µ –ø–∞–ø–∫–∏
            index_path = os.path.join(abs_path, 'index.html')
            if os.path.exists(index_path):
                relative_path = os.path.relpath(index_path, settings.MEDIA_ROOT)
                return f"{settings.MEDIA_URL}{relative_path}"

            # 2Ô∏è‚É£ –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –∏—â–µ–º index.html –≥–ª—É–±–∂–µ
            for root, dirs, files in os.walk(abs_path):
                if 'index.html' in files:
                    relative_path = os.path.relpath(os.path.join(root, 'index.html'), settings.MEDIA_ROOT)
                    return f"{settings.MEDIA_URL}{relative_path}"

        return None


# üß© –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∫–Ω–∏–≥–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ ZIP
@receiver(post_save, sender=Book)
def extract_zip_on_save(sender, instance, created, **kwargs):
    """
    –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ ZIP-—Ñ–∞–π–ª–∞:
    1. –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –∫–Ω–∏–≥–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å.
    2. –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏–≤ –≤ media/books/{id}/
    3. –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç 'mobile' ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ—ë, –∏–Ω–∞—á–µ –±–µ—Ä—ë—Ç –ø–∞–ø–∫—É —Å index.html
    """
    # ‚ö†Ô∏è –ï—Å–ª–∏ —Å–∏–≥–Ω–∞–ª –≤—ã–∑–≤–∞–Ω –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ mobile_folder ‚Äî –≤—ã—Ö–æ–¥–∏–º
    if not created and 'mobile_zip' not in kwargs.get('update_fields', []):
        return

    if instance.mobile_zip:
        extract_path = os.path.join(settings.MEDIA_ROOT, 'books', str(instance.id))

        # üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É –∫–Ω–∏–≥–∏
        if os.path.exists(extract_path):
            shutil.rmtree(extract_path)

        try:
            os.makedirs(extract_path, exist_ok=True)

            # üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞
            with zipfile.ZipFile(instance.mobile_zip.path, 'r') as zip_ref:
                zip_ref.extractall(extract_path)

            found_folder = None

            # üîç –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º 'mobile'
            for root, dirs, files in os.walk(extract_path):
                if 'mobile' in dirs:
                    found_folder = os.path.relpath(os.path.join(root, 'mobile'), settings.MEDIA_ROOT)
                    break

            # üìÅ –ï—Å–ª–∏ –Ω–µ—Ç 'mobile', –±–µ—Ä—ë–º —Ç—É –ø–∞–ø–∫—É, –≥–¥–µ –Ω–∞–π–¥–µ–Ω index.html
            if not found_folder:
                for root, dirs, files in os.walk(extract_path):
                    if 'index.html' in files:
                        found_folder = os.path.relpath(root, settings.MEDIA_ROOT)
                        break

            if found_folder:
                # ‚öôÔ∏è –û—Ç–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä–µ–∫—É—Ä—Å–∏–∏
                post_save.disconnect(extract_zip_on_save, sender=Book)
                instance.mobile_folder = found_folder
                instance.save(update_fields=['mobile_folder'])
                post_save.connect(extract_zip_on_save, sender=Book)
                print(f"[OK] –ö–Ω–∏–≥–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–∞ –≤: {found_folder}")
            else:
                print("[WARN] –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ 'mobile', –Ω–∏ index.html.")

        except Exception as e:
            print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ ZIP: {e}")
